{"ast":null,"code":"import _toConsumableArray from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken } from '@angular/core';\nimport { of, throwError } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport function storageFactory() {\n  return typeof window === undefined || typeof localStorage === undefined ? null : localStorage;\n}\nexport var LOCAL_STORAGE_TOKEN = new InjectionToken('example-app-local-storage', {\n  factory: storageFactory\n});\nexport var BookStorageService = /*#__PURE__*/(function () {\n  var BookStorageService = /*#__PURE__*/function () {\n    function BookStorageService(storage) {\n      _classCallCheck(this, BookStorageService);\n\n      this.storage = storage;\n      this.collectionKey = 'books-app';\n    }\n\n    _createClass(BookStorageService, [{\n      key: \"supported\",\n      value: function supported() {\n        return this.storage !== null ? of(true) : throwError('Local Storage Not Supported');\n      }\n    }, {\n      key: \"getCollection\",\n      value: function getCollection() {\n        var _this = this;\n\n        return this.supported().pipe(map(function (_) {\n          return _this.storage.getItem(_this.collectionKey);\n        }), map(function (value) {\n          return value ? JSON.parse(value) : [];\n        }));\n      }\n    }, {\n      key: \"addToCollection\",\n      value: function addToCollection(records) {\n        var _this2 = this;\n\n        return this.getCollection().pipe(map(function (value) {\n          return [].concat(_toConsumableArray(value), _toConsumableArray(records));\n        }), tap(function (value) {\n          return _this2.storage.setItem(_this2.collectionKey, JSON.stringify(value));\n        }));\n      }\n    }, {\n      key: \"removeFromCollection\",\n      value: function removeFromCollection(ids) {\n        var _this3 = this;\n\n        return this.getCollection().pipe(map(function (value) {\n          return value.filter(function (item) {\n            return !ids.includes(item.id);\n          });\n        }), tap(function (value) {\n          return _this3.storage.setItem(_this3.collectionKey, JSON.stringify(value));\n        }));\n      }\n    }, {\n      key: \"deleteCollection\",\n      value: function deleteCollection() {\n        var _this4 = this;\n\n        return this.supported().pipe(tap(function () {\n          return _this4.storage.removeItem(_this4.collectionKey);\n        }));\n      }\n    }]);\n\n    return BookStorageService;\n  }();\n\n  BookStorageService.ɵfac = function BookStorageService_Factory(t) {\n    return new (t || BookStorageService)(i0.ɵɵinject(LOCAL_STORAGE_TOKEN));\n  };\n\n  BookStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookStorageService,\n    factory: BookStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { createSelector, createFeatureSelector, combineReducers } from '@ngrx/store';\nimport * as fromSearch from './../reducers/search.reducer';\nimport * as fromBooks from './../reducers/books.reducer';\nimport * as fromCollection from './../reducers/collection.reducer';\nexport var booksFeatureKey = 'books';\nexport function reducers(state, action) {\n  var _combineReducers;\n\n  return combineReducers((_combineReducers = {}, _defineProperty(_combineReducers, fromSearch.searchFeatureKey, fromSearch.reducer), _defineProperty(_combineReducers, fromBooks.booksFeatureKey, fromBooks.reducer), _defineProperty(_combineReducers, fromCollection.collectionFeatureKey, fromCollection.reducer), _combineReducers))(state, action);\n}\nexport var selectBooksState = createFeatureSelector(booksFeatureKey);\nexport var selectBookEntitiesState = createSelector(selectBooksState, function (state) {\n  return state.books;\n});\nexport var selectSelectedBookId = createSelector(selectBookEntitiesState, fromBooks.selectId);\n\nvar _fromBooks$adapter$ge = fromBooks.adapter.getSelectors(selectBookEntitiesState),\n    selectBookIds = _fromBooks$adapter$ge.selectIds,\n    selectBookEntities = _fromBooks$adapter$ge.selectEntities,\n    selectAllBooks = _fromBooks$adapter$ge.selectAll,\n    selectTotalBooks = _fromBooks$adapter$ge.selectTotal;\n\nexport { selectBookIds, selectBookEntities, selectAllBooks, selectTotalBooks };\nexport var selectSelectedBook = createSelector(selectBookEntities, selectSelectedBookId, function (entities, selectedId) {\n  return selectedId && entities[selectedId];\n});\nexport var selectSearchState = createSelector(selectBooksState, function (state) {\n  return state.search;\n});\nexport var selectSearchBookIds = createSelector(selectSearchState, fromSearch.getIds);\nexport var selectSearchQuery = createSelector(selectSearchState, fromSearch.getQuery);\nexport var selectSearchLoading = createSelector(selectSearchState, fromSearch.getLoading);\nexport var selectSearchError = createSelector(selectSearchState, fromSearch.getError);\nexport var selectSearchResults = createSelector(selectBookEntities, selectSearchBookIds, function (books, searchIds) {\n  return searchIds.map(function (id) {\n    return books[id];\n  }).filter(function (book) {\n    return book != null;\n  });\n});\nexport var selectCollectionState = createSelector(selectBooksState, function (state) {\n  return state.collection;\n});\nexport var selectCollectionLoaded = createSelector(selectCollectionState, fromCollection.getLoaded);\nexport var getCollectionLoading = createSelector(selectCollectionState, fromCollection.getLoading);\nexport var selectCollectionBookIds = createSelector(selectCollectionState, fromCollection.getIds);\nexport var selectBookCollection = createSelector(selectBookEntities, selectCollectionBookIds, function (entities, ids) {\n  return ids.map(function (id) {\n    return entities[id];\n  }).filter(function (book) {\n    return book != null;\n  });\n});\nexport var isSelectedBookInCollection = createSelector(selectCollectionBookIds, selectSelectedBookId, function (ids, selected) {\n  return !!selected && ids.indexOf(selected) > -1;\n});","map":null,"metadata":{},"sourceType":"module"}
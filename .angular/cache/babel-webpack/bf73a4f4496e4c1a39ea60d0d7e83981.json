{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { BooksApiActions, FindBookPageActions } from '../actions';\nexport var searchFeatureKey = 'search';\nvar initialState = {\n  ids: [],\n  loading: false,\n  error: '',\n  query: ''\n};\nexport var reducer = createReducer(initialState, on(FindBookPageActions.searchBooks, function (state, _ref) {\n  var query = _ref.query;\n  return query === '' ? {\n    ids: [],\n    loading: false,\n    error: '',\n    query: query\n  } : Object.assign(Object.assign({}, state), {\n    loading: true,\n    error: '',\n    query: query\n  });\n}), on(BooksApiActions.searchSuccess, function (state, _ref2) {\n  var books = _ref2.books;\n  return {\n    ids: books.map(function (book) {\n      return book.id;\n    }),\n    loading: false,\n    error: '',\n    query: state.query\n  };\n}), on(BooksApiActions.searchFailure, function (state, _ref3) {\n  var errorMsg = _ref3.errorMsg;\n  return Object.assign(Object.assign({}, state), {\n    loading: false,\n    error: errorMsg\n  });\n}));\nexport var getIds = function getIds(state) {\n  return state.ids;\n};\nexport var getQuery = function getQuery(state) {\n  return state.query;\n};\nexport var getLoading = function getLoading(state) {\n  return state.loading;\n};\nexport var getError = function getError(state) {\n  return state.error;\n};","map":null,"metadata":{},"sourceType":"module"}
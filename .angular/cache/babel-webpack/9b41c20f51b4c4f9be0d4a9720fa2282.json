{"ast":null,"code":"import _classCallCheck from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { catchError, filter, map, switchMap, take, tap } from 'rxjs/operators';\nimport { GoogleBooksService } from '../../core/services/google-books.service';\nimport { BookActions } from '../actions';\nimport * as fromBooks from '../reducers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../core/services/google-books.service\";\nimport * as i3 from \"@angular/router\";\nexport var BookExistsGuard = /*#__PURE__*/(function () {\n  var BookExistsGuard = /*#__PURE__*/function () {\n    function BookExistsGuard(store, googleBooks, router) {\n      _classCallCheck(this, BookExistsGuard);\n\n      this.store = store;\n      this.googleBooks = googleBooks;\n      this.router = router;\n    }\n\n    _createClass(BookExistsGuard, [{\n      key: \"waitForCollectionToLoad\",\n      value: function waitForCollectionToLoad() {\n        return this.store.select(fromBooks.selectCollectionLoaded).pipe(filter(function (loaded) {\n          return loaded;\n        }), take(1));\n      }\n    }, {\n      key: \"hasBookInStore\",\n      value: function hasBookInStore(id) {\n        return this.store.select(fromBooks.selectBookEntities).pipe(map(function (entities) {\n          return !!entities[id];\n        }), take(1));\n      }\n    }, {\n      key: \"hasBookInApi\",\n      value: function hasBookInApi(id) {\n        var _this = this;\n\n        return this.googleBooks.retrieveBook(id).pipe(map(function (bookEntity) {\n          return BookActions.loadBook({\n            book: bookEntity\n          });\n        }), tap(function (action) {\n          return _this.store.dispatch(action);\n        }), map(function (book) {\n          return !!book;\n        }), catchError(function () {\n          _this.router.navigate(['/404']);\n\n          return of(false);\n        }));\n      }\n    }, {\n      key: \"hasBook\",\n      value: function hasBook(id) {\n        var _this2 = this;\n\n        return this.hasBookInStore(id).pipe(switchMap(function (inStore) {\n          if (inStore) {\n            return of(inStore);\n          }\n\n          return _this2.hasBookInApi(id);\n        }));\n      }\n    }, {\n      key: \"canActivate\",\n      value: function canActivate(route) {\n        var _this3 = this;\n\n        return this.waitForCollectionToLoad().pipe(switchMap(function () {\n          return _this3.hasBook(route.params['id']);\n        }));\n      }\n    }]);\n\n    return BookExistsGuard;\n  }();\n\n  BookExistsGuard.ɵfac = function BookExistsGuard_Factory(t) {\n    return new (t || BookExistsGuard)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.GoogleBooksService), i0.ɵɵinject(i3.Router));\n  };\n\n  BookExistsGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookExistsGuard,\n    factory: BookExistsGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return BookExistsGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}
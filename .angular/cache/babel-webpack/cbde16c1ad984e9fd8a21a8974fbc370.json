{"ast":null,"code":"import _classCallCheck from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, tap } from 'rxjs/operators';\nimport { LoginPageActions, AuthActions, AuthApiActions } from './../actions';\nimport { LogoutConfirmationDialogComponent } from '../components';\nimport { UserActions } from '../../core/actions';\nimport * as i0 from \"@angular/core\";\nexport var AuthEffects = /*#__PURE__*/(function () {\n  var AuthEffects = function AuthEffects() {\n    var _this = this;\n\n    _classCallCheck(this, AuthEffects);\n\n    this.login$ = createEffect(function () {\n      return _this.actions$.pipe(ofType(LoginPageActions.login), map(function (action) {\n        return action.credentials;\n      }), exhaustMap(function (auth) {\n        return _this.authService.login(auth).pipe(map(function (user) {\n          return AuthApiActions.loginSuccess({\n            user: user\n          });\n        }), catchError(function (error) {\n          return of(AuthApiActions.loginFailure({\n            error: error\n          }));\n        }));\n      }));\n    });\n    this.loginSuccess$ = createEffect(function () {\n      return _this.actions$.pipe(ofType(AuthApiActions.loginSuccess), tap(function () {\n        return _this.router.navigate(['/']);\n      }));\n    }, {\n      dispatch: false\n    });\n    this.loginRedirect$ = createEffect(function () {\n      return _this.actions$.pipe(ofType(AuthApiActions.loginRedirect, AuthActions.logout), tap(function (authed) {\n        _this.router.navigate(['/login']);\n      }));\n    }, {\n      dispatch: false\n    });\n    this.logoutConfirmation$ = createEffect(function () {\n      return _this.actions$.pipe(ofType(AuthActions.logoutConfirmation), exhaustMap(function () {\n        var dialogRef = _this.dialog.open(LogoutConfirmationDialogComponent);\n\n        return dialogRef.afterClosed();\n      }), map(function (result) {\n        return result ? AuthActions.logout() : AuthActions.logoutConfirmationDismiss();\n      }));\n    });\n    this.logoutIdleUser$ = createEffect(function () {\n      return _this.actions$.pipe(ofType(UserActions.idleTimeout), map(function () {\n        return AuthActions.logout();\n      }));\n    });\n  };\n\n  AuthEffects.ɵfac = function AuthEffects_Factory(t) {\n    return new (t || AuthEffects)();\n  };\n\n  AuthEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthEffects,\n    factory: AuthEffects.ɵfac\n  });\n  return AuthEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}
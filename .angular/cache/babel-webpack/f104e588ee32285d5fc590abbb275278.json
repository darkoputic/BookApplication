{"ast":null,"code":"import _classCallCheck from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darkoputic/Projects/Practice/Angular/StoreApplication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Store } from '@ngrx/store';\nimport * as fromAuth from '../reducers';\nimport { LoginPageActions } from '../actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport var LoginPageComponent = /*#__PURE__*/(function () {\n  var LoginPageComponent = /*#__PURE__*/function () {\n    function LoginPageComponent(store) {\n      _classCallCheck(this, LoginPageComponent);\n\n      this.store = store;\n      this.pending$ = this.store.select(fromAuth.selectLoginPagePending);\n      this.error$ = this.store.select(fromAuth.selectLoginPageError);\n    }\n\n    _createClass(LoginPageComponent, [{\n      key: \"onSubmit\",\n      value: function onSubmit(credentials) {\n        this.store.dispatch(LoginPageActions.login({\n          credentials: credentials\n        }));\n      }\n    }]);\n\n    return LoginPageComponent;\n  }();\n\n  LoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  LoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 3,\n    vars: 6,\n    consts: [[3, \"pending\", \"errorMessage\", \"submitted\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-login-form\", 0);\n        i0.ɵɵlistener(\"submitted\", function LoginPageComponent_Template_app_login_form_submitted_0_listener($event) {\n          return ctx.onSubmit($event);\n        });\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"pending\", i0.ɵɵpipeBind1(1, 2, ctx.pending$))(\"errorMessage\", i0.ɵɵpipeBind1(2, 4, ctx.error$));\n      }\n    },\n    pipes: [i2.AsyncPipe],\n    encapsulation: 2\n  });\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}